#BlueJ class context
comment0.params=imgLoc\ width\ height
comment0.target=javax.swing.ImageIcon\ generateIcon(java.lang.String,\ int,\ int)
comment0.text=\r\n\ <pre>\r\n\ Generates\ an\ icon\ that\ can\ be\ used\ elsewere\ in\ the\ application.\r\n\ </pre>\r\n\ @param\ imgLoc\ The\ URL\ of\ the\ image\r\n\ @param\ width\ The\ desired\ icon\ width\r\n\ @param\ height\ The\ desired\ icon\ height\r\n\ @return\ The\ generated\ icon\r\n
comment1.params=b
comment1.target=ShopController(Model)
comment1.text=\r\n\ <pre>\r\n\ Creates\ a\ new\ instance\ of\ ShopController.\r\n\ Make\ sure\ to\ call\ the\ "init"\ method\ after\ this\!\r\n\ </pre>\r\n\ @param\ b\ The\ Model\ with\ all\ of\ the\ back-end\ links\ that\ the\ store\ is\ to\ use\r\n
comment10.params=username
comment10.target=void\ setCurrentUser(java.lang.String)
comment11.params=name\ username\ pass\ confPass\ email\ address\ phone\ cardNumber
comment11.target=void\ signup(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment11.text=\r\n\ <pre>\r\n\ Attempts\ to\ sign\ up\ a\ user.\r\n\ \r\n\ This\ will\ display\ an\ error\ to\ the\ user\ if\ any\ of\ the\ following\ are\ true\:\r\n\ -\ The\ user\ ID\ is\ less\ than\ 3\ chars\ long\r\n\ -\ The\ password\ is\ less\ than\ 5\ chars\ long\r\n\ -\ The\ two\ passwords\ do\ not\ match.\r\n\ \r\n\ If\ all\ of\ the\ above\ tests\ succeed\ then\ the\ back-end\ will\ be\ asked\ to\ create\ a\ user.\r\n\ If\ the\ back-end\ succeeds\ in\ creating\ an\ account,\ the\ user\ will\ be\ logged\ in,\ if\ not,\ they\ will\ be\ shown\ an\ error.\r\n\ </pre>\r\n\ @param\ username\ The\ entered\ user\ ID.\r\n\ @param\ pass\ The\ entered\ password.\r\n\ @param\ confPass\ The\ entered\ confirmed\ password.\r\n
comment12.params=username\ password
comment12.target=void\ attemptLogin(java.lang.String,\ java.lang.String)
comment12.text=\r\n\ <pre>\r\n\ Attempts\ to\ log\ a\ user\ into\ the\ store.\r\n\ \r\n\ If\ the\ login\ succeeds,\ they\ will\ be\ presented\ with\ the\ product\ list,\ if\ not,\ they\ will\ be\ shown\ an\ error.\r\n\ </pre>\r\n\ @param\ username\ The\ supplied\ user\ ID\r\n\ @param\ password\ The\ supplied\ password\r\n
comment13.params=
comment13.target=void\ logout()
comment14.params=c
comment14.target=void\ updateUserDetails(Customer)
comment14.text=\r\n\ <pre>\r\n\ Calls\ the\ appropriate\ methods\ on\ the\ Model\ instance\ to\ update\ the\ information\ about\ the\ current\ user.\r\n\ \r\n\ If\ no\ user\ is\ logged\ in,\ an\ error\ message\ will\ be\ displayed\ in\ the\ console.\r\n\ </pre>\r\n\ @param\ c\ The\ new\ user\ details.\r\n
comment15.params=
comment15.target=void\ showCheckout()
comment15.text=\r\n\ <pre>\r\n\ Shows\ the\ checkout\ dialog.\r\n\ </pre>\r\n
comment16.params=
comment16.target=Cart\ getCart()
comment16.text=\r\n\ @return\ The\ current\ user's\ cart.\r\n
comment17.params=p\ quantity
comment17.target=void\ addToCart(Product,\ float)
comment17.text=\r\n\ <pre>\r\n\ Adds\ a\ product\ to\ the\ cart.\ See\ "Cart.addToCart"\ for\ more\ information.\r\n\ </pre>\r\n\ @param\ p\ The\ product\r\n\ @param\ quantity\ The\ quantity\ to\ add\r\n
comment18.params=
comment18.target=void\ showCartView()
comment18.text=\r\n\ <pre>\r\n\ Shows\ the\ cart\ view.\r\n\ </pre>\r\n
comment19.params=
comment19.target=float\ getTotalCartPrice()
comment19.text=\r\n\ <pre>\r\n\ See\ "Model.getPrice(Cart)"\ for\ more\ information.\r\n\ </pre>\r\n\ @return\ The\ total\ price\ of\ all\ item\ in\ the\ cart\r\n
comment2.params=e
comment2.target=void\ windowClosing(java.awt.event.WindowEvent)
comment20.params=
comment20.target=void\ showProductList()
comment20.text=\r\n\ <pre>\r\n\ Shows\ the\ product\ list\ view.\r\n\ </pre>\r\n
comment21.params=
comment21.target=void\ attemptTransaction()
comment21.text=\r\n\ <pre>\r\n\ Attempts\ a\ transaction\ using\ the\ current\ user's\ details\ and\ the\ current\ cart.\r\n\ </pre>\r\n
comment3.params=view
comment3.target=void\ setView(View)
comment3.text=\r\n\ <pre>\r\n\ Sets\ the\ store's\ current\ view\ after\ setting\ the\ view's\ controller\ and\ initializing\ it.\r\n\ </pre>\r\n\ @param\ view\ The\ view\ to\ set\r\n
comment4.params=
comment4.target=javax.swing.JFrame\ getWindow()
comment4.text=\r\n\ @return\ The\ JFrame\ that\ holds\ the\ store.\r\n
comment5.params=
comment5.target=Model\ getBackend()
comment5.text=\r\n\ @return\ The\ Model\ instance\ controlling\ the\ store.\r\n
comment6.params=
comment6.target=void\ init()
comment6.text=\r\n\ <pre>\r\n\ Initialize\ and\ show\ the\ store\ window.\r\n\ Also\ displays\ the\ LoginView.\r\n\ </pre>\r\n
comment7.params=message
comment7.target=void\ showPopup(java.lang.String)
comment7.text=\r\n\ <pre>\r\n\ Shows\ a\ popup\ message.\r\n\ </pre>\r\n\ @param\ message\ The\ text\ in\ the\ popup\ window.\r\n
comment8.params=
comment8.target=Customer\ getCurrentCustomerDetails()
comment8.text=\r\n\ @return\ The\ customer\ details\ received\ from\ the\ Model\ instance.\r\n
comment9.params=
comment9.target=java.lang.String\ getCurrentUser()
numComments=22
